name: CodeCoverage

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: CI
    env:
      AUTH0_DOMAIN: ${{ vars.AUTH0_DOMAIN }}
      AUTH0_AUDIENCE: ${{ vars.AUTH0_AUDIENCE }}
      AUTH0_PRIVATE_INV_TOKEN: ${{ secrets.AUTH0_PRIVATE_INV_TOKEN }}
      AUTH0_CLIENTID: ${{ secrets.AUTH0_CLIENTID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      SQL_CONN_STRING: ${{ secrets.SQL_CONN_STRING }}
      PAT: ${{ secrets.PAT }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Install Coverlet
      run: dotnet tool install --global coverlet.console
    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
    - name: Coverlet - Integration Test Code Coverage
      run: coverlet IntegrationTests/bin/Debug/net8.0/IntegrationTests.dll --target "dotnet" --targetargs "test IntegrationTests --no-build" --format opencover --output "integration"
    - name: Coverlet - Unit Test Code Coverage
      run: coverlet UnitTests/bin/Debug/net8.0/UnitTests.dll --target "dotnet" --targetargs "test UnitTests --no-build" --format opencover --output "unit"
    - name: Coverlet - Functional Test Code Coverage
      run: coverlet FunctionalTests/bin/Debug/net8.0/FunctionalTests.dll --target "dotnet" --targetargs "test FunctionalTests --no-build" --format opencover --output "functional"
    - name: ReportGenerator - Generate Report
      run: reportgenerator "-reports:functional.opencover.xml;integration.opencover.xml;unit.opencover.xml" "-targetdir:coveragereport" -reporttypes:Html
    - name: Store Coverage Report
      run: cp -r coveragereport ~
    - name: Checkout code-coverage
      uses: actions/checkout@v4
      with:
        ref: 'code-coverage'
        token: ${{ secrets.PAT }}
    - name: Set up Git
      run: |
        git config --global user.email "noahshoap@gmail.com"
        git config --global user.name "Noah Shoap"
    - name: Copy Over Coverage Report
      run: cp ~/coveragereport/* .
    - name: Git Add
      run: git add .
    - name: Git Commit
      run: git commit -m "Automated New Coverage Report"
    - name: Git Push
      run: git push
            
            
